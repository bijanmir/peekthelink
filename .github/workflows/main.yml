name: Deploy to PeekTheLink (Prod)

on:
  push:
    branches: [ "master" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: Production   # <-- THIS unlocks your Environment secrets

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Preflight secrets
        run: |
          test -n "${{ secrets.SSH_HOST }}" || { echo "SSH_HOST is empty"; exit 1; }
          test -n "${{ secrets.SSH_USER }}" || { echo "SSH_USER is empty"; exit 1; }
          test -n "${{ secrets.SSH_KEY }}"  || { echo "SSH_KEY is empty";  exit 1; }

      - name: Upload code via SCP
        uses: appleboy/scp-action@v0.1.7
        with:
          host:     ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key:      ${{ secrets.SSH_KEY }}
          port:     ${{ secrets.SSH_PORT || 22 }}
          source:   "./"
          target:   "/var/www/peekthelink"
          rm: true
          overwrite: true
          strip_components: 1
          exclude: |
            .git*
            node_modules
            vendor
            .github

      - name: Run remote deploy steps (composer, npm build, artisan)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host:     ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key:      ${{ secrets.SSH_KEY }}
          port:     ${{ secrets.SSH_PORT || 22 }}
          script: |
            set -euo pipefail
            APP_DIR=/var/www/peekthelink
            cd "$APP_DIR"

            php artisan down || true

            chown -R $USER:www-data storage bootstrap/cache public/build || true
            find storage bootstrap/cache public/build -type d -exec chmod 775 {} \; || true
            find storage bootstrap/cache public/build -type f -exec chmod 664 {} \; || true

            composer install --no-dev --prefer-dist --optimize-autoloader --no-interaction

            php artisan cache:clear || true
            php artisan config:clear || true
            php artisan route:clear || true
            php artisan view:clear || true

            if [ -f package-lock.json ]; then npm ci; else npm install; fi
            npm run build

            php artisan migrate --force

            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            php artisan optimize
            php artisan queue:restart || true
            php artisan up
