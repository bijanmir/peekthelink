name: Deploy (Build in CI)

on:
  push:
    branches: [ "master" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: Production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install & build (CI)
        run: |
          npm ci
          npm run build

      # Upload only compiled assets to the server
      - name: Upload public/build
        uses: appleboy/scp-action@v0.1.7
        with:
          host:     ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key:      ${{ secrets.SSH_KEY }}
          port:     ${{ secrets.SSH_PORT || 22 }}
          source:   "public/build/*"
          target:   "/var/www/peekthelink/public/build"
          rm: true
          overwrite: true

      # Upload PHP/app code (skip node_modules/vendor/.git)
      - name: Upload app code
        uses: appleboy/scp-action@v0.1.7
        with:
          host:     ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key:      ${{ secrets.SSH_KEY }}
          port:     ${{ secrets.SSH_PORT || 22 }}
          source:   "./"
          target:   "/var/www/peekthelink"
          rm: true
          overwrite: true
          strip_components: 1
          exclude: |
            .git*
            node_modules
            vendor
            .github
            public/build

      - name: Remote deploy (composer, migrate, cache)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host:     ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key:      ${{ secrets.SSH_KEY }}
          port:     ${{ secrets.SSH_PORT || 22 }}
          script: |
            set -euo pipefail
            APP_DIR=/var/www/peekthelink
            cd "$APP_DIR"

            php artisan down || true

            chown -R $USER:www-data storage bootstrap/cache public/build || true
            find storage bootstrap/cache public/build -type d -exec chmod 775 {} \; || true
            find storage bootstrap/cache public/build -type f -exec chmod 664 {} \; || true

            composer install --no-dev --prefer-dist --optimize-autoloader --no-interaction

            php artisan cache:clear || true
            php artisan config:clear || true
            php artisan route:clear || true
            php artisan view:clear || true

            # Postgres is your DB; migrations will use .env on the server
            php artisan migrate --force

            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            php artisan optimize
            php artisan queue:restart || true
            php artisan up
