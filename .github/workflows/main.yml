name: Deploy to PeekTheLink (Prod)

on:
  push:
    branches: [ "master" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # Preflight: fail if SSH secrets are empty (won't print them)
      - name: Preflight secrets
        run: |
          test -n "${{ secrets.SSH_KEY }}"  || { echo "SSH_KEY is empty";  exit 1; }
          test -n "${{ secrets.SSH_USER }}" || { echo "SSH_USER is empty"; exit 1; }

      - name: Rsync code to server
        uses: burnett01/rsync-deployments@7.0.1
        with:
          switches: -az --delete \
            --exclude=".git" --exclude="node_modules" --exclude="vendor" --exclude=".github" \
            --exclude="storage/logs/*" --exclude="storage/framework/cache/*"
          path: ./
          remote_path: /var/www/peekthelink           # hard-coded to avoid empty var
          remote_host: 64.23.138.243                  # hard-coded to avoid empty secret/var issue
          remote_user: ${{ secrets.SSH_USER }}        # e.g. "bijan"
          remote_key:  ${{ secrets.SSH_KEY }}         # private key (OpenSSH format)
          # remote_port: 22                           # add if different

      - name: Run remote deploy steps (composer, npm build, artisan)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host:     64.23.138.243
          username: ${{ secrets.SSH_USER }}
          key:      ${{ secrets.SSH_KEY }}
          script: |
            set -euo pipefail
            cd /var/www/peekthelink

            php artisan down || true

            # Make sure bijan owns writable dirs (avoid sudo prompts)
            chown -R $USER:www-data storage bootstrap/cache public/build || true
            find storage bootstrap/cache public/build -type d -exec chmod 775 {} \; || true
            find storage bootstrap/cache public/build -type f -exec chmod 664 {} \; || true

            composer install --no-dev --prefer-dist --optimize-autoloader --no-interaction

            php artisan cache:clear || true
            php artisan config:clear || true
            php artisan route:clear || true
            php artisan view:clear || true

            if [ -f package-lock.json ]; then npm ci; else npm install; fi
            npm run build

            php artisan migrate --force

            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            php artisan optimize
            php artisan queue:restart || true
            php artisan up
